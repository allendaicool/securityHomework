string fake_passwd("fangfeidefengzheng@");
	unsigned char *fake_digest = MD5Sequence(fake_passwd);
	cout<<"fake_digest length is " << strlen((const char *)fake_digest)<<endl;


	string viDec(relativePath);
	viDec.append("+v2");
	int iv2_length=0;
	unsigned char * iv2_enc = read_enc_key_iv_file (viDec,iv2_length); 
	
	//cout<<" -----------------printde here is  " << iv2_length <<endl;
	//cout<<"iv2_enc length is " << strlen((const char *)iv2_enc )<<endl;
	
	string passwd_enc(relativePath);
	passwd_enc.append("+key");
	int passwd_enc_length = 0;
	unsigned char *key_enc_file = read_enc_key_iv_file (passwd_enc ,passwd_enc_length); 
	cout<<"key_enc_file length is " << strlen((const char *)key_enc_file )<<endl;
	cout<<" -----------------printde here is  " << passwd_enc_length <<endl;
	

	unsigned char *real_key = (unsigned char *)malloc(33);
	memset(real_key,0,33);
	
      	int encrypt_len = decrypt(key_enc_file, passwd_enc_length, fake_digest, iv2_enc,real_key);
	real_key  = (unsigned char *)realloc(real_key,encrypt_len+1);
	real_key [encrypt_len] = '\0';
	cout<<"-----------------------fake key      is aaaaaaaaaaaaaaaaaa!!!!!!!"<<endl;
	hex_print(real_key, 16);
	cout<<"the real value key is aaaaaaaaaaaaaaaa!!!!!!!!!"<<endl;
	hex_print(aes_Key, 16);


	if(compare_key_fakeKey(real_key,aes_Key,16))
		cout<<"they match-------------------"<<endl;
	//cout<<"the encrypt len is "<<encrypt_len<<endl;



	FILE * pFile;
 	long lSize;
  	char * buffer;
  	size_t result;

  	pFile = fopen (relativePath.c_str(), "rb" );
 	if (pFile==NULL) {fputs ("File error",stderr); exit (1);}

  	// obtain file size:
  	fseek (pFile , 0 , SEEK_END);
  	lSize = ftell (pFile);
  	rewind (pFile);
	//cout<<"the size of file is   " << lSize<<endl;
	
  	// allocate memory to contain the whole file:
	 buffer = (char*) malloc (sizeof(char)*lSize+1);
	//cout<<"it is ok here B"<<endl;
	 memset(buffer,0,sizeof(char)*lSize+1);
  	if (buffer == NULL) {fputs ("Memory error",stderr); exit (2);}

  	// copy the file into the buffer:
  	result = fread (buffer,1,lSize,pFile);
  	if (result != lSize) {fputs ("Reading error",stderr); exit (3);}

  /* the whole file is now loaded in the memory buffer. */

  // terminate
 	 fclose (pFile);



	cout<<"the result is so large ----------------------->" << result<<endl;
	unsigned char *plaintext2 = (unsigned char*)malloc(sizeof(char)*result+1);
	memset(plaintext2,0,sizeof(char)*result+1);
	
//aes_Key
	int decslength = decrypt((unsigned char *)buffer,result, real_key,
 	iv_dec, plaintext2);
	
	cout<<"decryption leng is " << decslength<<endl;
	cout<<"the real decryption length is " << strlen((const char *)plaintext2)<<endl;
	plaintext2 = (unsigned char*)realloc(plaintext2,decslength+1);
	plaintext2[decslength] = '\0';
	printf("our text file is %s \n", plaintext2);
	//cout<<"the real decryption length for now is " << strlen((const char *)plaintext2)<<endl;
